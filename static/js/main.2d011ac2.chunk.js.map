{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","React","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discovery_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","console","log","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d011ac2.chunk.js","sourcesContent":["export const authEnpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"https://faisalmashuri.github.io/Spotify-Clone/\";\r\n\r\nconst clientId = \"6c38e620c3284821bbdb34fc6811769c\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n      return initial;\r\n    }, {});\r\n};\r\nexport const loginUrl = `${authEnpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scopes=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { loginUrl } from \"./spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      {/* Spotify Logoi */}\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      {/* Button */}\r\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ title, Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption_icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React, { useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = React.createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React, { useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar_logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n      <br />\r\n      <strong className=\"sidebar_title\">PLAYLIST</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SeacrhIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Header() {\r\n  const [{ user }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header_left\">\r\n        <SeacrhIcon />\r\n        <input placeholder=\"Seacrh for Artists, Song, or Albums\" type=\"text\" />\r\n      </div>\r\n      <div className=\"header_right\">\r\n        <Avatar src={user?.images[0]?.url} alt=\"FM\" />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track }) {\r\n  return (\r\n    <div className=\"songRow\">\r\n      <img src={track.album.images[0].url} className=\"songRow_album\" />\r\n      <div className=\"songRow_info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport SongRow from \"./SongRow\";\r\nfunction Body({ spotify }) {\r\n  const [{ discovery_weekly }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body_info\">\r\n        <img src={discovery_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body_infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discovery_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body_songs\">\r\n        <div className=\"body_icon\">\r\n          <PlayCircleFilledIcon className=\"body_shuffle\" />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n        {/* List of Song */}\r\n        {discovery_weekly?.tracks.items.map((item) => (\r\n          <SongRow track={item.track} />\r\n        ))}\r\n        {/* {discovery_weekly?.tracks.items.map((item) => (\r\n          <SongRow track={item.track} />\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <img\r\n          className=\"album_logo\"\r\n          src=\"https://upload.wikimedia.org/wikipedia/en/2/2e/Usher-yeah.jpg\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"footer_songInfo\">\r\n          <h4>Yeah!</h4>\r\n          <p>Usher</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"footer_center\">\r\n        <ShuffleIcon className=\"footer_green\" />\r\n        <SkipPreviousIcon className=\"footer_icon\" />\r\n        <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer_icon\" />\r\n        <SkipNextIcon className=\"footer_icon\" />\r\n        <RepeatIcon className=\"footer_green\" />\r\n      </div>\r\n\r\n      <div className=\"footer_right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        {/* Sidebar */}\r\n        <Sidebar />\r\n        {/* Body */}\r\n        <Body spotify={spotify} />\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  const [{ user, token }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXcIJazRV9ISoM\").then((response) => {\n        dispatch({\n          type: \"SET_DISCOVERY_WEEKLY\",\n          discovery_weekly: response,\n        });\n      });\n    }\n  }, []);\n  console.log(\":\", user);\n  console.log(\"token : \", token);\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlist: [],\r\n  playing: false,\r\n  item: null,\r\n  // hapus kalo mau masuk production\r\n  token: null,\r\n  //   \"BQCvhqe7KSrqyGWOg1rmxHtRmOGWhmnfn0LEydCnBWeKMj5LaDE7_WxIYDbWNSXxec805ujvkplgYho4Lj5SGk4V7gdTE7bw8dHqjF2lM2Lr-iFOkqkFCkc3Ymj_oVLErAIyi2JSWm7pFsMc1bAQeEr_5agsF5k\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n\r\n    case \"SET_DISCOVERY_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discovery_weekly: action.discovery_weekly,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}